%dev.quarkus.http.port=9090

kafka.bootstrap.servers=kafka1:19092
%dev.kafka.bootstrap.servers=localhost:9092

# this allows us to deserialize the data in the class we've compiled
kafka.specific.avro.reader=true

mp.messaging.connector.smallrye-kafka.schema.registry.url=http://schema-registry:8081/
%dev.mp.messaging.connector.smallrye-kafka.schema.registry.url=http://localhost:8081/

mp.messaging.outgoing.movies.connector=smallrye-kafka
mp.messaging.outgoing.movies.topic=_kafkaclient-javaexample-movies_avro
mp.messaging.outgoing.movies.value.serializer=io.confluent.kafka.serializers.KafkaAvroSerializer

mp.messaging.incoming.movies-from-kafka.connector=smallrye-kafka
mp.messaging.incoming.movies-from-kafka.topic=_kafkaclient-javaexample-movies_avro
mp.messaging.incoming.movies-from-kafka.value.deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
mp.messaging.incoming.movies-from-kafka.auto.offset.reset=earliest

# Reactive messaging handles offset commits for us
mp.messaging.incoming.movies-from-kafka.enable.auto.commit=false
